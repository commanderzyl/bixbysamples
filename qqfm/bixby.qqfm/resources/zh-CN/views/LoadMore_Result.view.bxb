result-view {
  match {
    BigResult(this) {
      from-output: LoadMore(action)
    }
  }

  message {
    if (exists(this.singerSearchResult)) {
      if (!exists(this.singerSearchResult.user_list) || size(this.singerSearchResult.user_list) == 0 || this.singerSearchResult.isRecommonded) {
        template-macro(QQFM_3_2_Search_the_anchors_list_Singer_Match_No)
      } else {
        template-macro(QQFM_3_3_Search_the_anchors_list_Singer_Match_Yes)
      }
    } else-if (exists(this.singerShows)) {
      template-macro(QQFM_3_3_Search_the_anchors_list_Singer_Match_Yes)
    }
  }

  conversation-drivers {
    if (exists(this.singerSearchResult)) {
      if (exists(this.singerSearchResult.user_list) && size(this.singerSearchResult.user_list) >= 1) {
        conversation-driver {
          template-macro (CHECK_FIRST)
        }
      }

      if (exists(this.singerSearchResult.has_more) && this.singerSearchResult.has_more == 1) {
        conversation-driver {
          template-macro (LOAD_MORE)
        }
      }
    }
    
    if (exists(this.singerShows)) {
      if (exists(this.singerShows.show_list) && size(this.singerShows.show_list) != 0) {
        conversation-driver {
          template-macro (PLAY_FIRST)
        }
      }

      if (exists(this.singerShows.has_more) && this.singerShows.has_more == 1) {
        conversation-driver {
          template-macro (LOAD_MORE)
        }
      }  
    }
  }

  render {
    if (exists(this.singerSearchResult)) {
      if (exists(this.singerSearchResult.user_list) && size(this.singerSearchResult.user_list) >= 1) {
        list-of (this.singerSearchResult.user_list) {
          where-each (item) {
            layout-macro (singer_summary_macro) {
              param (singer) {
                expression (item)
              }
            }
          }
        }
      }        
    } else-if (exists(this.singerShows)) {
      layout-macro (singershows_summary_macro) {
        param (singerShows) {
          expression (this.singerShows)
        }
      }  
    }
  }  
}