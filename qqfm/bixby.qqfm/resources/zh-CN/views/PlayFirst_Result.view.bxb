result-view {
  match {
    BigResult(this) {
      from-output: PlayFirst(action)
    }
  }

  message {
    if (exists(this.play_first)) {
      if (this.play_first.play_result != 0) {
        template-macro(QQFM_13_1_Play_one_Number_Match_No)
      }
    } else-if (exists(this.singerSearchResult)) {
      if (!exists(this.singerSearchResult.user_list) || size(this.singerSearchResult.user_list) == 0 || this.singerSearchResult.isRecommonded) {
        template-macro(QQFM_3_2_Search_the_anchors_list_Singer_Match_No)
      } else {
        template-macro(QQFM_3_3_Search_the_anchors_list_Singer_Match_Yes)
      }
    }  
  }


  app-launch {     
    payload-uri{
      if (exists(this.play_first) && this.play_first.play_result == 0 && exists(this.play_first.deeplink_uri)) {
        if (exists(this.play_first.deeplink_uri.uri)) {
          template("#{value(this.play_first.deeplink_uri.uri)}")
        }        
      }
    }
    requires {
      app-id (com.tencent.radio)
      app-name(企鹅FM)
      // app-min-version (800053000)
      app-store-url (samsungapps://ProductDetail/com.tencent.radio)    
    }       
  }


  conversation-drivers {   
    if (exists(this.singerSearchResult)) {
      if (exists(this.singerSearchResult.user_list) && size(this.singerSearchResult.user_list) != 0) {
        conversation-driver {
          template-macro (CHECK_FIRST)
        }
      }

      if (exists(this.singerSearchResult.has_more) && this.singerSearchResult.has_more == 1) {
        conversation-driver {
          template-macro (LOAD_MORE)
        }
      } 
    }

    if (exists(this.singerShows)) {
      if (exists(this.singerShows.show_list) && size(this.singerShows.show_list) != 0) {
        conversation-driver {
          template-macro (PLAY_FIRST)
        }
      }

      if (exists(this.singerShows.has_more) && this.singerShows.has_more == 1) {
        conversation-driver {
          template-macro (LOAD_MORE)
        }
      }
    }

    if (exists(this.recentAlbumListSearchResult)) {
      if (exists(this.recentAlbumListSearchResult.album_list) && size(this.recentAlbumListSearchResult.album_list) != 0) {
        conversation-driver {
          template-macro (CHECK_FIRST)
        }

        conversation-driver {
          template-macro (PLAY_FIRST)
        }
      }

      if (exists(this.recentAlbumListSearchResult.has_more) && this.recentAlbumListSearchResult.has_more == 1) {
        conversation-driver {
          template-macro (LOAD_MORE)
        }
      } 
    }

    if (exists(this.recentShowListSearchResult)) {
      if (exists(this.recentShowListSearchResult.show_list) && size(this.recentShowListSearchResult.show_list) != 0) {
        conversation-driver {
          template-macro (PLAY_FIRST)
        }
      }

      if (exists(this.recentShowListSearchResult.has_more) && this.recentShowListSearchResult.has_more == 1) {
        conversation-driver {
          template-macro (LOAD_MORE)
        }
      } 
    }
    if (exists(this.recentAlbumListDetailSearchResult)) {
      if (exists(this.recentAlbumListDetailSearchResult.show_list) && size(this.recentAlbumListDetailSearchResult)!=0) {
        conversation-driver {
          template-macro (PLAY_FIRST)
        }
      }

      if (exists(this.recentAlbumListDetailSearchResult.has_more) && this.recentAlbumListDetailSearchResult.has_more == 1) {
        conversation-driver {
          template-macro (LOAD_MORE)
        }
      }   
    }
  }

  render {
    if (exists(this.singerSearchResult) && size(this.singerSearchResult.user_list) >= 1) {
      list-of (this.singerSearchResult.user_list) {
        where-each (item) {
          layout-macro (singer_summary_macro) {
            param (singer) {
              expression (item)
            }
          }
        }
      }
    } else-if (exists(this.singerShows)) {
      layout-macro (singershows_summary_macro) {
        param (singerShows) {
          expression (this.singerShows)
        }
      }  
    }
  }  
}